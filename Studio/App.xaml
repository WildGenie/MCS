<Application x:Class="Advent.VmcStudio.App" 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:btfwc="clr-namespace:Advent.VmcStudio.Converters"  
             xmlns:ms="clr-namespace:Advent.VmcStudio.StartMenu"
             xmlns:mcsm="clr-namespace:Advent.MediaCenter.StartMenu;assembly=Advent.MediaCenter" 
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:ui="clr-namespace:Advent.Common.UI;assembly=Advent.Common" 
             xmlns:l="clr-namespace:Advent.VmcStudio"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/RibbonControlsLibrary;component/Themes/Office2007Blue.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <btfwc:BooleanToFontWeightConverter x:Key="BooleanToFontWeight" />
            <btfwc:FontFamilyToStringConverter x:Key="FontFamilyToString" />
            <btfwc:CamelCaseToWordsConverter x:Key="CamelCaseToWords" />
            <btfwc:BooleanToColorConverter x:Key="IsDefaultBoolToColor" TrueValue="{StaticResource {x:Static SystemColors.GrayTextColorKey}}" FalseValue="{StaticResource {x:Static SystemColors.ControlTextColorKey}}" />
            <btfwc:BooleanNegationConverter x:Key="BooleanNegationConverter" />
            <btfwc:BooleanToVisibilityConverter x:Key="BooleanToVisibility" />
            <btfwc:BooleanToVisibilityConverter x:Key="BooleanToVisibilityNeg" TrueValue="Hidden" FalseValue="Collapsed" />
            <btfwc:BooleanOrConverter x:Key="BooleanOr" />
            <btfwc:StringFormatConverter x:Key="StringFormatter" />
            <system:Double x:Key="SelectedImageOpacity">0.75</system:Double>
            <DataTemplate x:Key="MenuStripTemplate" DataType="{x:Type mcsm:IMenuStrip}">
                <ms:MenuStrip Strip="{Binding}" />
            </DataTemplate>
            <DataTemplate x:Key="QuickLinkTemplate" DataType="{x:Type mcsm:IQuickLink}">
                <ms:QuickLink Link="{Binding}" />
            </DataTemplate>
            
            <DataTemplate x:Key="EntryPointTemplate">
                <ms:EntryPoint OemEntryPoint="{Binding}" />
            </DataTemplate>
            <Style x:Key="HeadingTextStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="TextBlock.FontSize" Value="18" />
                <Setter Property="TextBlock.FontWeight" Value="Bold" />
            </Style>
            <Style x:Key="IsEnabledOpacityStyle" TargetType="{x:Type FrameworkElement}">
                <Style.Triggers>
                    <Trigger Property="UIElement.IsEnabled" Value="False">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.4" AccelerationRatio="0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.4" AccelerationRatio="0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="{x:Type Image}" TargetType="{x:Type Image}" BasedOn="{StaticResource IsEnabledOpacityStyle}" />
            <Style x:Key="OuterBorderStyle" TargetType="{x:Type Border}">
                <Setter Property="Border.CornerRadius" Value="5" />
                <Setter Property="Border.Padding" Value="3" />
                <Setter Property="Border.BorderThickness" Value="1" />
                <Setter Property="Border.BorderBrush" Value="#DDA7A7A7" />
            </Style>
            <Style x:Key="InnerBorderStyle" TargetType="{x:Type Border}">
                <Setter Property="Border.CornerRadius" Value="1" />
                <Setter Property="Border.BorderThickness" Value="1" />
                <Setter Property="Border.BorderBrush" Value="#DDA7A7A7" />
            </Style>
            <Style x:Key="ActionListBoxStyle" TargetType="{x:Type ListBox}">
                <Setter Property="ItemsControl.ItemContainerStyle" Value="{DynamicResource ListBoxItemStyle}" />
                <Setter Property="Control.Background" Value="#00FFFFFF" />
                <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
                <Setter Property="Control.BorderThickness" Value="1" />
                <Setter Property="FrameworkElement.Margin" Value="2 0 2 0" />
            </Style>
            <Storyboard x:Key="ControlGotFocus">
                <ColorAnimation Storyboard.TargetName="outerBorder" Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)" To="#bb87A9CA" Duration="00:00:00.2" />
                <ColorAnimation Storyboard.TargetName="outerBorderBackgroundGradientStop1" Storyboard.TargetProperty="Color" To="#BBCFE9FF" Duration="00:00:00.3" />
                <ColorAnimation Storyboard.TargetName="outerBorderBackgroundGradientStop2" Storyboard.TargetProperty="Color" To="#bbF0F8FF" Duration="00:00:00.3" />
                <ColorAnimation Storyboard.TargetName="outerBorderBackgroundGradientStop3" Storyboard.TargetProperty="Color" To="#9981B1E0" Duration="00:00:00.3" />
                <ColorAnimation Storyboard.TargetName="innerBorder" Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)" To="#bb87A9CA" Duration="00:00:00.2" />
                <ColorAnimation Storyboard.TargetName="innerBorderBackgroundGradientStop1" Storyboard.TargetProperty="Color" To="#FFBAD3EC" Duration="00:00:00.5" />
                <DoubleAnimation Storyboard.TargetName="innerBorderBackgroundGradientStop1" Storyboard.TargetProperty="Offset" To="1.5" Duration="00:00:00.3" />
                <DoubleAnimation Storyboard.TargetName="innerBorderBackgroundGradientStop2" Storyboard.TargetProperty="Offset" To="0.4" Duration="00:00:00.3" />
            </Storyboard>
            <Storyboard x:Key="ControlLostFocus">
                <ColorAnimation Storyboard.TargetName="outerBorder" Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)" To="#DDA7A7A7" Duration="00:00:00.2" />
                <ColorAnimation Storyboard.TargetName="outerBorderBackgroundGradientStop1" Storyboard.TargetProperty="Color" To="#bbF0F8FF" Duration="00:00:00.2" />
                <ColorAnimation Storyboard.TargetName="outerBorderBackgroundGradientStop2" Storyboard.TargetProperty="Color" To="Transparent" Duration="00:00:00.2" />
                <ColorAnimation Storyboard.TargetName="outerBorderBackgroundGradientStop3" Storyboard.TargetProperty="Color" To="Transparent" Duration="00:00:00.2" />
                <ColorAnimation Storyboard.TargetName="innerBorder" Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)" To="#DDA7A7A7" Duration="00:00:00.2" />
                <ColorAnimation Storyboard.TargetName="innerBorderBackgroundGradientStop1" Storyboard.TargetProperty="Color" To="#FFEAEAEA" Duration="00:00:00.3" />
                <DoubleAnimation Storyboard.TargetName="innerBorderBackgroundGradientStop1" Storyboard.TargetProperty="Offset" To="0" Duration="00:00:00.2" />
                <DoubleAnimation Storyboard.TargetName="innerBorderBackgroundGradientStop2" Storyboard.TargetProperty="Offset" To="0.8" Duration="00:00:00.2" />
            </Storyboard>
            <Style x:Key="GlassBorder" TargetType="{x:Type ContentControl}">
                <Style.Triggers>
                    <EventTrigger RoutedEvent="UIElement.GotFocus">
                        <BeginStoryboard Storyboard="{StaticResource ControlGotFocus}" />
                    </EventTrigger>
                    <EventTrigger RoutedEvent="UIElement.LostFocus">
                        <BeginStoryboard Storyboard="{StaticResource ControlLostFocus}" />
                    </EventTrigger>
                </Style.Triggers>
                <Style.Setters>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ContentControl}">
                                <Border Name="outerBorder" Style="{StaticResource OuterBorderStyle}">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop x:Name="outerBorderBackgroundGradientStop1" Color="#bbF0F8FF" Offset="0" />
                                            <GradientStop x:Name="outerBorderBackgroundGradientStop2" Color="Transparent" Offset="0.355" />
                                            <GradientStop x:Name="outerBorderBackgroundGradientStop3" Color="Transparent" Offset="0.355" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border Name="innerBorder" Style="{StaticResource InnerBorderStyle}">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0.2,1">
                                                <GradientStop x:Name="innerBorderBackgroundGradientStop1" Color="#FFEAEAEA" Offset="0" />
                                                <GradientStop x:Name="innerBorderBackgroundGradientStop2" Color="#FFF6F6F6" Offset="0.8" />
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <ContentPresenter />
                                    </Border>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
            </Style>
            <Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid Background="#00FFFFFF">
                                <Border Name="HighlightBorder" Opacity="0.6" Visibility="Hidden" Background="{x:Static SystemColors.HighlightBrush}" />
                                <ContentPresenter />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ListBoxItem.IsSelected" Value="True">
                                    <Setter TargetName="HighlightBorder" Property="UIElement.Visibility" Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DropHighlightStyle">
                <Style.Triggers>
                    <Trigger Property="ui:DragDrop.IsDropOver" Value="True">
                        <Setter Property="Border.Background">
                            <Setter.Value>
                                <SolidColorBrush Color="{StaticResource {x:Static SystemColors.HighlightColorKey}}" Opacity="0.5" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>